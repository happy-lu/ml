问题1: 全连接神经网络 (25 分)
IPython notebook 文件FullyConnectedNets.ipynb 会给你介绍我们的模块化神经网络层是如何设计的，然后用这些层去实现任意深度(层数)的全连接神经网络。为了优化这些模型，你将要实现几个常见的更新规则。

问题2: 批量正则化 (25 分)
在IPython notebook文件 BatchNormalization.ipynb 中，你将要实现批量正则化并且用它去训练深层全连接神经网络。

问题3: Dropout正则化 (10 分)
在IPython notebook文件 Dropout.ipynb 中会帮助你实现Dropout正则化，并且探讨它对模型泛化的影响。

问题4: 卷积神经网络 (30 分)
在IPython Notebook文件 ConvolutionalNetworks.ipynb 中，你要实现几个广泛运用在卷积神经网络中的新的神经网络层。

问题5: 在CIFAR-10数据集上运用PyTorch / TensorFlow  (10 分)
在这最后一部分，你可以选择在TensorFlow或者PyTorch这两个著名且强大的深度学习框架上完成你的作业。你只需要选择两个notebooks文件中的一个，不需要两个都做，但是如果你两个都完成了， 会得到少量的额外加分。

打开 PyTorch.ipynb 或者 TensorFlow.ipynb 。你将会了解这些框架如何运行，最后利用CIFAR-10数据集去训练你自己设计的卷积神经网络，并尽可能地优化它来实现最佳效果。

问题5: 额外作业! (最多加10 分)
在训练你的神经网络的过程中，你可以自由添加任何东西来让你的神经网络获得更好的性能。例如，你可以修改原来的解决方案，再添加几层神经网络层，或者使用不同类型的正则化函数，使用一个集成模块，或者你能想到的其它任何东西。如果你能够使用其他的作业指导中没有提到的方法，你将会得到额外的加分。

翻译/ 付兆海 袁庆  文加图